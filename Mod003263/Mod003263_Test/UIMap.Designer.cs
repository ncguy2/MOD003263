// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Mod003263_Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        #region Properties
        public UIWpfWindow UIWpfWindow
        {
            get
            {
                if ((this.mUIWpfWindow == null))
                {
                    this.mUIWpfWindow = new UIWpfWindow();
                }
                return this.mUIWpfWindow;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        
        public UIQueryWindow UIQueryWindow
        {
            get
            {
                if ((this.mUIQueryWindow == null))
                {
                    this.mUIQueryWindow = new UIQueryWindow();
                }
                return this.mUIQueryWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIWpfWindow mUIWpfWindow;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        
        private UIQueryWindow mUIQueryWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIWpfWindow : WpfWindow
    {
        
        public UIWpfWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            #endregion
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItemCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom(this);
                }
                return this.mUIItemCustom;
            }
        }
        
        public UIInterviewSubCustom UIInterviewSubCustom
        {
            get
            {
                if ((this.mUIInterviewSubCustom == null))
                {
                    this.mUIInterviewSubCustom = new UIInterviewSubCustom(this);
                }
                return this.mUIInterviewSubCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCustom mUIItemCustom;
        
        private UIInterviewSubCustom mUIInterviewSubCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemCustom : WpfCustom
    {
        
        public UIItemCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MainMenu";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIApplicantEntryCustom UIApplicantEntryCustom
        {
            get
            {
                if ((this.mUIApplicantEntryCustom == null))
                {
                    this.mUIApplicantEntryCustom = new UIApplicantEntryCustom(this);
                }
                return this.mUIApplicantEntryCustom;
            }
        }
        
        public UIQuestionEditorCustom UIQuestionEditorCustom
        {
            get
            {
                if ((this.mUIQuestionEditorCustom == null))
                {
                    this.mUIQuestionEditorCustom = new UIQuestionEditorCustom(this);
                }
                return this.mUIQuestionEditorCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIApplicantEntryCustom mUIApplicantEntryCustom;
        
        private UIQuestionEditorCustom mUIQuestionEditorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIApplicantEntryCustom : WpfCustom
    {
        
        public UIApplicantEntryCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ApplicantEntry";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "applicantEntry";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITxt_FirstNameEdit
        {
            get
            {
                if ((this.mUITxt_FirstNameEdit == null))
                {
                    this.mUITxt_FirstNameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxt_FirstNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txt_FirstName";
                    this.mUITxt_FirstNameEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUITxt_FirstNameEdit;
            }
        }
        
        public WpfEdit UITxt_LastNameEdit
        {
            get
            {
                if ((this.mUITxt_LastNameEdit == null))
                {
                    this.mUITxt_LastNameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxt_LastNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txt_LastName";
                    this.mUITxt_LastNameEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUITxt_LastNameEdit;
            }
        }
        
        public WpfEdit UITxt_EmailEdit
        {
            get
            {
                if ((this.mUITxt_EmailEdit == null))
                {
                    this.mUITxt_EmailEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxt_EmailEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txt_Email";
                    this.mUITxt_EmailEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUITxt_EmailEdit;
            }
        }
        
        public WpfComboBox UISel_ApplyingPositionComboBox
        {
            get
            {
                if ((this.mUISel_ApplyingPositionComboBox == null))
                {
                    this.mUISel_ApplyingPositionComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUISel_ApplyingPositionComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "sel_ApplyingPosition";
                    this.mUISel_ApplyingPositionComboBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISel_ApplyingPositionComboBox;
            }
        }
        
        public WpfEdit UITxt_PhoneNumberEdit
        {
            get
            {
                if ((this.mUITxt_PhoneNumberEdit == null))
                {
                    this.mUITxt_PhoneNumberEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxt_PhoneNumberEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txt_PhoneNumber";
                    this.mUITxt_PhoneNumberEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUITxt_PhoneNumberEdit;
            }
        }
        
        public WpfEdit UITxt_AddressEdit
        {
            get
            {
                if ((this.mUITxt_AddressEdit == null))
                {
                    this.mUITxt_AddressEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxt_AddressEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txt_Address";
                    this.mUITxt_AddressEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUITxt_AddressEdit;
            }
        }
        
        public WpfDatePicker UIDat_DoBDatePicker
        {
            get
            {
                if ((this.mUIDat_DoBDatePicker == null))
                {
                    this.mUIDat_DoBDatePicker = new WpfDatePicker(this);
                    #region Search Criteria
                    this.mUIDat_DoBDatePicker.SearchProperties[WpfDatePicker.PropertyNames.AutomationId] = "dat_DoB";
                    this.mUIDat_DoBDatePicker.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIDat_DoBDatePicker;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITxt_FirstNameEdit;
        
        private WpfEdit mUITxt_LastNameEdit;
        
        private WpfEdit mUITxt_EmailEdit;
        
        private WpfComboBox mUISel_ApplyingPositionComboBox;
        
        private WpfEdit mUITxt_PhoneNumberEdit;
        
        private WpfEdit mUITxt_AddressEdit;
        
        private WpfDatePicker mUIDat_DoBDatePicker;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIQuestionEditorCustom : WpfCustom
    {
        
        public UIQuestionEditorCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.QuestionEditor";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "questionEditor";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITxt_CategoryEdit
        {
            get
            {
                if ((this.mUITxt_CategoryEdit == null))
                {
                    this.mUITxt_CategoryEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxt_CategoryEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txt_Category";
                    this.mUITxt_CategoryEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUITxt_CategoryEdit;
            }
        }
        
        public WpfEdit UITxt_QuestionEdit
        {
            get
            {
                if ((this.mUITxt_QuestionEdit == null))
                {
                    this.mUITxt_QuestionEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxt_QuestionEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txt_Question";
                    this.mUITxt_QuestionEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUITxt_QuestionEdit;
            }
        }
        
        public UITbl_AnswerTableTable UITbl_AnswerTableTable
        {
            get
            {
                if ((this.mUITbl_AnswerTableTable == null))
                {
                    this.mUITbl_AnswerTableTable = new UITbl_AnswerTableTable(this);
                }
                return this.mUITbl_AnswerTableTable;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITxt_CategoryEdit;
        
        private WpfEdit mUITxt_QuestionEdit;
        
        private UITbl_AnswerTableTable mUITbl_AnswerTableTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITbl_AnswerTableTable : WpfTable
    {
        
        public UITbl_AnswerTableTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "tbl_AnswerTable";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItemDataItem UIItemDataItem
        {
            get
            {
                if ((this.mUIItemDataItem == null))
                {
                    this.mUIItemDataItem = new UIItemDataItem(this);
                }
                return this.mUIItemDataItem;
            }
        }
        
        public UIItemDataItem1 UIItemDataItem1
        {
            get
            {
                if ((this.mUIItemDataItem1 == null))
                {
                    this.mUIItemDataItem1 = new UIItemDataItem1(this);
                }
                return this.mUIItemDataItem1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemDataItem mUIItemDataItem;
        
        private UIItemDataItem1 mUIItemDataItem1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemDataItem : WpfControl
    {
        
        public UIItemDataItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "DataItem";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new WpfCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Grade";
                    this.mUIItemCell.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private WpfCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemDataItem1 : WpfControl
    {
        
        public UIItemDataItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "DataItem";
            this.SearchProperties[WpfControl.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new WpfCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Grade";
                    this.mUIItemCell.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private WpfCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIInterviewSubCustom : WpfCustom
    {
        
        public UIInterviewSubCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.InterviewSub";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "interviewSub";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIInterviewCustom UIInterviewCustom
        {
            get
            {
                if ((this.mUIInterviewCustom == null))
                {
                    this.mUIInterviewCustom = new UIInterviewCustom(this);
                }
                return this.mUIInterviewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIInterviewCustom mUIInterviewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIInterviewCustom : WpfCustom
    {
        
        public UIInterviewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.Interview";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "interview";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITxt_FeedbackEdit
        {
            get
            {
                if ((this.mUITxt_FeedbackEdit == null))
                {
                    this.mUITxt_FeedbackEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxt_FeedbackEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "txt_Feedback";
                    this.mUITxt_FeedbackEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUITxt_FeedbackEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITxt_FeedbackEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIQueryWindow : WinWindow
    {
        
        public UIQueryWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Query";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Query");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Query");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
}
